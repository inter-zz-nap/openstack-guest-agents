#!/bin/sh

#
# This script is a fake 'agent-smith' program.
#
# When 'upgrade' is sent to 'agent-smith' and it is given a nova-agent
# tarball to upgrade to, it'll download it, and just call agent-smith's
# init script with 'restart'.  agent-smith's init script will de-install
# agent-smith, untar the new tarball, and then try to start
# /usr/sbin/agent-smith
#
# So, we need this program to be installed as /usr/sbin/agent-smith,
# which will take care of removing agent-smith's init script, install
# nova-agent's init script, and then run it.  When done, this script
# will remove itself.

rm -f /etc/init.d/agent-smith
rm -f /etc/init.d/agent-smith.init
update-rc.d agent-smith remove > /dev/null 2>&1
update-rc.d agent-smith.init remove > /dev/null 2>&1

# This forks into the background and looks for the old agent script
# to write out a response into the spool dir.  We catch it, and force
# the response into the xenstore.. and then remove the spool dir
(
    tries=0
    while [ $tries -lt 20 ] ; do
        old_agent_response=`find /var/spool/agent-smith/incoming -type f | tail -1`
        if [ "x${old_agent_response}" != "x" ]; then
            break
        fi
        tries=`expr $tries + 1`
        sleep 1
    done

    old_agent_response=`find /var/spool/agent-smith/incoming -type f | tail -1`

    uuid=`basename ${old_agent_response}`

    xenstore-write data/guest/${uuid} "`cat ${old_agent_response}`"

    rm -rf /var/spool/agent-smith
) &

# Remove /installer.sh from nova-agent tarball
rm -f /installer.sh

init_script=`find /usr/share/nova-agent -name nova-agent.init | head -1`

ln -s ${init_script} /etc/init.d/nova-agent
update-rc.d nova-agent start 20 2 3 4 5 . stop 20 0 1 6 . > /dev/null 2>&1

sh /etc/init.d/nova-agent start

rm -f /usr/sbin/agent-smith

exit 0
